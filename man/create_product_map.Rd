% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_product.R
\name{create_product_map}
\alias{create_product_map}
\title{Create a product mapping}
\usage{
create_product_map()
}
\value{
Returns a list of functions to operate with the mapping, see \code{\link{create_maptype_map}}.
}
\description{
Create a mapping that is formed by combining two mappings so that the output
of the combined mapping is the product of the outputs of the individual mappings.
For example, a product mapping can be used to define relative normalization errors.
}
\details{
The following fields are required in the parameter list to initialize the mapping:
\tabular{ll}{
\code{mapname} \tab Name of the mapping \cr
\code{maptype} \tab Must be \code{"product_map"} \cr
\code{maps} \tab A list containing the parameter specifications of the
individual mappings.
}
}
\examples{
params1 <- list(
  mapname = "mymap1",
  maptype = "linearinterpol_map",
  src_idx = 1:3,
  tar_idx = 4:6,
  src_x = c(1,5,10),
  tar_x = c(4,5,6)
)
params2 <- list(
  mapname = "mymap1",
  maptype = "linearinterpol_map",
  src_idx = 7:9,
  tar_idx = 4:6,
  src_x = c(1,5,10),
  tar_x = c(4,5,6)
)
product_params <- list(
  mapname = "myprodmap",
  maptype = "product_map",
  maps = list(params1, params2)
)
mymap <- create_product_map()
mymap$setup(product_params)
x <- c(1,2,3,0,0,0,6,7,8)
mymap$propagate(x)
mymap$jacobian(x)

}
\seealso{
Other mappings: 
\code{\link{create_compound_map}()},
\code{\link{create_convolution_with_xtrafo_map}()},
\code{\link{create_derivative2nd_map}()},
\code{\link{create_derivative_map}()},
\code{\link{create_linearinterpol_map}()},
\code{\link{create_linearinterpol_with_xtrafo_map}()},
\code{\link{create_linearmap_map}()},
\code{\link{create_maptype_map}()},
\code{\link{create_nonlinear_map}()},
\code{\link{create_normerr_map}()}
}
\concept{mappings}
